<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>[[i18n tmpl_react_graphql_title]]</title>
        <link rel="stylesheet" href="https://d2xbd92kui7v97.cloudfront.net/site/css/getting-started.css">
    </head>
    <body>
        <div id="root"></div>

        <!--
            React
            https://reactjs.org
        -->
        <script src="https://unpkg.com/react@17.0.1/umd/react.production.min.js" crossorigin="anonymous"></script>
        <script src="https://unpkg.com/react-dom@17.0.1/umd/react-dom.production.min.js" crossorigin="anonymous"></script>

        <!--
            React Router
            https://reacttraining.com/react-router/
            https://github.com/ReactTraining/react-router
        -->
        <script src="https://unpkg.com/react-router@5.2.0/umd/react-router.min.js"></script>
        <script src="https://unpkg.com/react-router-dom@5.2.0/umd/react-router-dom.min.js"></script>

        <!--
            DataFormsJS JSX Loader
            https://www.dataformsjs.com

            [[i18n jsxloader_line_1]]
            [[i18n jsxloader_line_2]]
        -->
        <script src="https://cdn.jsdelivr.net/npm/dataformsjs@5.0.2/js/react/jsxLoader.min.js"></script>

        <!--
            DataFormsJS React Components

            The core [DataFormsJS.min.js] file includes DataFormsJS React Components
            [JsonData, ErrorBoundary, LazyLoad, InputFilter, SortableTable] and Classes
            [Cache, Format]. All React Components are also compatible with Preact when
            using jsxLoader.

            Additional Components [ImageGallery, LeafletMap] and Class [I18n]
            need to be included seperatly.
        -->
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@5.0.2/js/react/es6/DataFormsJS.min.js"></script>
        <script nomodule src="https://cdn.jsdelivr.net/npm/dataformsjs@5.0.2/js/react/es5/DataFormsJS.min.js"></script>
        <!--
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@5.0.2/js/react/es6/I18n.min.js"></script>
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@5.0.2/js/react/es6/ImageGallery.min.js"></script>
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@5.0.2/js/react/es6/LeafletMap.min.js"></script>
        <script nomodule src="https://cdn.jsdelivr.net/npm/dataformsjs@5.0.2/js/react/es5/I18n.min.js"></script>
        <script nomodule src="https://cdn.jsdelivr.net/npm/dataformsjs@5.0.2/js/react/es5/ImageGallery.min.js"></script>
        <script nomodule src="https://cdn.jsdelivr.net/npm/dataformsjs@5.0.2/js/react/es5/LeafletMap.min.js"></script>
        -->

        <script type="text/babel">
            const Router = window.ReactRouterDOM.HashRouter;
            const Route = window.ReactRouterDOM.Route;
            const Redirect = window.ReactRouterDOM.Redirect;
            const NavLink = window.ReactRouterDOM.NavLink;

            const format = new Format();

            function ShowLoading() {
                return <h3 className="loading">[[i18n Loading...]]</h3>;
            }

            function ShowError(props) {
                return <p className="error">{props.error}</p>;
            }

            function HomePage() {
                return <h1>[[i18n tmpl_react_graphql_title]]</h1>;
            }

            function ShowCountries(props) {
                return (
                    <React.Fragment>
                        <h1>Countries</h1>
                        <InputFilter
                            filter-selector="table"
                            filter-results-selector="h1"
                            filter-results-text-all="[[i18n countries_all]]"
                            filter-results-text-filtered="[[i18n countries_filtered]]"
                            placeholder="[[i18n countries_enter_filer]]" />

                        <SortableTable
                            data-sort-class-odd="row-odd"
                            data-sort-class-even="row-even">
                            <thead>
                                <tr>
                                    <th>[[i18n country_code]]</th>
                                    <th>[[i18n country_name]]</th>
                                    <th>[[i18n country_size]]</th>
                                    <th>[[i18n country_pop]]</th>
                                    <th>[[i18n country_continent]]</th>
                                </tr>
                            </thead>
                            <tbody>
                                {props.data && props.data.countries && props.data.countries.map(country => {
                                    return (
                                        <tr key={country.iso}>
                                            <td>{country.iso}</td>
                                            <td>{country.country}</td>
                                            <td className="text-right" data-value={country.area_km}>{format.number(country.area_km)}</td>
                                            <td className="text-right" data-value={country.population}>{format.number(country.population)}</td>
                                            <td>{country.continent}</td>
                                        </tr>
                                    )
                                })}
                            </tbody>
                        </SortableTable>
                    </React.Fragment>
                )
            }

            function DataPage() {
                return (
                    <JsonData
                        url="https://www.dataformsjs.com/graphql"
                        graphQL={true}
                        query={`
                            {
                                countries {
                                    iso
                                    country
                                    area_km
                                    population
                                    continent
                                }
                            }
                        `}
                        variables={{}}
                        isLoading={<ShowLoading />}
                        hasError={<ShowError />}
                        isLoaded={<ShowCountries />}
                        loadOnlyOnce={true} />
                );
            }

            class App extends React.Component {
                render() {
                    return (
                        <ErrorBoundary>
                            <Router>
                                <header>
                                    <nav>
                                        <NavLink exact to="/" activeClassName="active">[[i18n Home]]</NavLink>
                                        <NavLink exact to="/data" activeClassName="active">[[i18n data_example]]</NavLink>
                                    </nav>
                                </header>

                                <main id="view" className="container">
                                    <Route exact path="/" component={HomePage} />
                                    <Route exact path="/data" component={DataPage} />
                                </main>
                            </Router>
                        </ErrorBoundary>
                    )
                }
            }

            ReactDOM.render(
                <App />,
                document.getElementById('root')
            );
        </script>
    </body>
</html>