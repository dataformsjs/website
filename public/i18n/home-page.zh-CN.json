{
    "filter": "筛选",
    "user_name": "用户名",
    "password": "密码",
    "login": "登录",
    "overview_1": "一个极小的JavaScript框架和独立的组件，用于开发高质量的网站和单页应用程序.",
    "overview_2": "DataFormsJS与流行的视图和模板引擎一起使用，处理控制器逻辑和模型状态.",
    "works_with": "Works with",
    "and_more": "and more!",
    "faster_dev_title": "更快速的开发",
    "faster_dev_desc": "仅使用HTML标记展示来自Web和GraphQL服务的数据，并使用HTML属性定义应用程序和网站功能.",
    "small_size_title": "小体积",
    "small_size_desc": "所有文件都是小尺寸的，仅在使用时才会下载，以获得更好的性能和更小的站点.",
    "easy_learn_title": "易学习",
    "easy_learn_desc": "DataFormsJS基于HTML，CSS，JavaScript，模板构建，并且具有极小的JavaScript和HTML API，因此您可以立即开始使用.",
    "stability_title": "稳定性强",
    "stability_desc": "专为长期使用而设计,今天使用DataFormsJS开发的站点将运行良好，并且数十年间易于维护.",
    "flexibility_title": "灵活性强",
    "flexibility_desc": "可与其他代码很好地结合使用，并且该API旨在提供灵活性和自定义功能.",
    "better_title": "更好的网站",
    "better_desc": "DataFormsJS旨在为开发人员和用户提供绝佳的体验，让您能够创建更好的网站.",
    "view_sample": "View Full Sample",
    "hello_world_example": "Hello World Example",
    "hello_world_hbs_desc": "DataFormsJS框架非常适合单页应用程序(SPA)带有[data-route]的<template>和<script>元素用于定义不同的路由(网页),并且变量可以从URL传递到页面的模型.本示例使用HandlebarsJS进行模板渲染.",
    "hello_world_js_desc": "不需要使用模板或View Engine(例如HandlebarsJS或Vue).在示例中，插件[dataBind.js]与属性[data-bind]一起使用,以显示URL中的变量.",
    "hello_world_web_desc": "DataFormsJS包含可以在现代浏览器上使用的Web组件,为使用旧浏览器的用户提供友好的警告.Web组件通常被描述为Web开发的未来,因为它们是定义良好的标准,并且提供了类似于JavaScript框架的功能.同时使用更少的代码.",
    "hello_world_react_desc": "DataFormsJS提供了一个基于web的编译器[jsxLoader.js],可以用作Babel的替代品.它允许在网页内部使用JSX,而不需要构建过程.这个编译器下载起来很小,运行起来非常快.",
    "json_data_example": "Display JSON Data from a Web Service",
    "json_data_hbs_desc": "使用DataFormsJS,您可以仅使用标记(HTML和模板)显示来自web服务的数据.可以开发[data-page]中指定的不同页面对象来处理控制器逻辑和模型状态.内置的页面对象[jsonData]允许根据请求的状态[isLoading,isLoaded,hasError]控制呈现什么HTML.在本例中,插件使用属性[data-filter-selector]和[data-sort]来允许用户与数据表进行交互.页面模板根据匹配路由的[src]属性下载和缓存.",
    "json_data_vue_desc": "DataFormsJS支持Vue作为渲染引擎,该引擎允许应用程序使用Vue显示数据,而无需编写JavaScript.每个路由都被分配了自己的Vue实例模型,使用内置页面对象[jsonData]时,可以使用[isLoading,isLoaded,hasError]控制显示的内容.在此示例中,在路由上定义了[data-countries]和[data-regions],它们也通过Vue观察程序将它们设置为实例属性[countries]和[regions].这两个属性都代表来自下载的Web服务的数据. DataFormsJS可与Vue 2和Vue 3一起使用。",
    "json_data_react_desc": "DataFormsJS还提供了一组React组件,可用于提供与标准框架类似的功能.React组件体积很小,并包含显示Web服务数据,错误处理,表排序,过滤器控件,语言翻译,数据格式等功能.",
    "json_data_graphql_desc": "DataFormsJS为GraphQL提供内置支持.本示例使用HandlebarsJS显示来自GraphQL服务的数据.可以将GraphQL分配给页面上的整体路线和各个元素,查询可以直接嵌入页面中,或者在首次使用时自行下载.",
    "json_data_web_desc": "与React组件类似,DataFormsJS提供了一组Web组件,可用于提供与标准框架类似的功能.Web组件体积很小,为使用Web组件的应用程序或网站提供了一个很好的起点.对于SPA而言,<url hash route>组件将下载并缓存基于[src]属性使用的模板.<json data>组件使用[data bind]和其他选项将数据从web服务传递给子元素.",
    "create_site": "立即创建在线临时网站!"
}
