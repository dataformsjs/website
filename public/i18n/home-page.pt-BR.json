{
    "filter": "Filtro",
    "user_name": "Nome de Usuário",
    "password": "Senha",
    "login": "Entrar",
    "overview_1": "Uma estrutura JavaScript mínima e componentes independentes para o desenvolvimento de sites de alta qualidade e aplicativos de página única.",
    "overview_2": "O DataFormsJS trabalha com mecanismos populares de exibição e modelo e, manipula a lógica do controlador e o estado do modelo.",
    "works_with": "Funciona com",
    "and_more": "e mais!",
    "faster_dev_title": "Desenvolvimento agilizado",
    "faster_dev_desc": "Exiba dados de Web Services e GraphQL utilizando apenas a Marcação HTML e defina os recursos de Aplicativo e Site utilizando Atributos HTML.",
    "small_size_title": "Tamanho pequeno",
    "small_size_desc": "Todos os arquivos são pequenos e baixados somente quando utilizados, permitindo maior desempenho e um site menor.",
    "easy_learn_title": "Fácil de aprender",
    "easy_learn_desc": "O DataFormsJS é desenvolvido com base em HTML, CSS, JavaScript, Modelos e possui uma API JavaScript e HTML mínima para que você possa começar imediatamente.",
    "stability_title": "Estabilidade",
    "stability_desc": "Projetado para uso a longo prazo; um site desenvolvido com o DataFormsJS hoje funcionará muito bem e será fácil de manter daqui a algumas décadas.",
    "flexibility_title": "Flexibilidade",
    "flexibility_desc": "Funciona bem com outro código e a API foi projetada para oferecer flexibilidade e recursos personalizados. Se você pode imaginar, pode construir com DataFormsJS.",
    "better_title": "Sites melhores",
    "better_desc": "O DataFormsJS foi projetado para ser uma ótima experiência para desenvolvedores e usuários finais, permitindo que você crie sites melhores.",
    "view_sample": "Ver amostra completa",
    "hello_world_example": "Olá Mundo Exemplo",
    "hello_world_hbs_desc": "O framework DataFormsJS é ideal para Aplicativos de Página Única (SPA). Elementos <template> and <script> com [data-route] são utilizados para definir rotas diferentes (páginas web) e variáveis pode ser passadas à partir da URL do model da página. Este exemplo usa HandlebarsJS para renderização de modelos.",
    "hello_world_js_desc": "Utilizar um mecanismo de Template or View como HandlebarsJS ou Vue não é obrigatório. Neste exemplo um plugin [dataBind.js] é utilizado com o atributo [data-bind] para mostrar a variável da URL.",
    "hello_world_web_desc": "O DataFormsJS inclui Web Components que pode ser utilizado nos navegadores modernos e fornece um alerta amigável para usuários com navegadores antigos. Web Components são frequentemente referidos como o futuro do desenvolvimento web por que eles são um padrão bem definido e fornecem, com menos código, funcionalidades similares a frameworks JavaScript.",
    "hello_world_react_desc": "O DataFormsJS fornece um compilador baseado na Web [jsxLoader.js] que pode ser usado como uma alternativa ao Babel. Ele permite que o JSX seja usado dentro de páginas da web sem a necessidade de um processo de construção. O compilador é pequeno para baixar e extremamente rápido para executar.",
    "json_data_example": "Mostrar dados JSON de um Web Service",
    "json_data_hbs_desc": "Com o DataFormsJS você pode mostrar dados de web services utilizando somente marcação (HTML e Modelos). Objetos diferentes especificados in [data-page] pode ser desenvolvido para a lógica e o estado do modelo. O objeto integrado [jsonData] permite o controle de qual parte do HTML renderizar baseando-se no estado da requisição [isLoading, isLoaded, hasError]. Neste exemplo os atributos [data-filter-selector] e [data-sort] são utilizados por plugins para permitir interação de usuário com a tabela de dados. Modelos de páginas são baixados e armazenados em cache baseando-se no atributo [src] da rota correspondente.",
    "json_data_vue_desc": "O DataFormsJS suporta o Vue como um mecanismo de renderização que permite apps mostrarem dados utilizando Vue sem a necessidade de escrever JavaScript. Cada rota tem seu próprio modelo de instância Vue designado e, ao utilizar o objeto de página integrado [jsonData], pode-se utilizar [isLoading, isLoaded, hasError] para controlar o que é mostrado. O DataFormsJS funciona com o Vue 2 e o Vue 3.",
    "json_data_react_desc": "O DataFormsJS também fornece um conjunto de componentes React (JSX e JS) que podem ser utilizados para proporcionar funcionalidades similares ao framework padrão. Os componentes React são pequenos em tamanho e incluem características como: mostrar dados de web services, gerenciamento de erros, ordenação de tabela, controles de filtragem, internacionalização (i18n) / tradução, formatação de dados e mais.",
    "json_data_graphql_desc": "O DataFormsJS fornece suporte integrado para GraphQL. Este exemplo usa HandlebarsJS para mostrar os dados de um serviço GraphQL. GraphQL pode ser atribuído a rotas gerais e elementos individuais na página e consultas podem ser integradas diretamente na página ou baixadas dinamicamente quando usadas pela primeira vez.",
    "json_data_web_desc": "Similar aos componentes React, DataFormsJS também fornece um conjunto de Web Components que podem ser utilizados para dar funcionalidade similar para o framework padrão. Os Web Components são pequenos em tamanho e proporcionam um bom ponto inicial para um app ou site que se utiliza de deles. Para SPAs o componente <url-route> baixará e armazenará modelos quando utilizado com base no atributo [src]. O componente <json-data> passa dados do serviço web para os elementos filhos utilizando [data-bind] e outras opções.",
    "create_site": "Crie um Site Instantâneo no Code Playground!"
}
