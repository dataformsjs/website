{
    "filter": "Filtre",
    "user_name": "Nom d'utilisateur",
    "password": "Mot de passe",
    "login": "S'identifier",
    "overview_1": "Un framework JavaScript minimal et des composants React et Web autonomes pour le développement rapide de sites Web de haute qualité et d'applications d'une seule page.",
    "overview_2": "DataFormsJS fonctionne avec les moteurs de vue et de modèle courants et gère la logique du contrôleur et l'état du modèle.",
    "works_with": "Marche avec",
    "and_more": "et plus!",
    "faster_dev_title": "Développement plus rapide",
    "faster_dev_desc": "Affichez les données des services Web et GraphQL en utilisant uniquement le balisage HTML et définissez les fonctionnalités de l'application et du site à l'aide des attributs HTML.",
    "small_size_title": "Petite taille",
    "small_size_desc": "Tous les fichiers sont de petite taille et téléchargés uniquement lorsqu'ils sont utilisés, ce qui permet de meilleures performances et un site plus petit.",
    "easy_learn_title": "Facile à apprendre",
    "easy_learn_desc": "DataFormsJS est construit autour de HTML, CSS, JavaScript, Templating et possède une API JavaScript et HTML minimale pour que vous puissiez commencer immédiatement.",
    "stability_title": "La stabilité",
    "stability_desc": "Conçu pour une utilisation à long terme; un site développé avec DataFormsJS aujourd'hui fonctionnera très bien et sera facile à entretenir dans des décennies.",
    "flexibility_title": "La flexibilité",
    "flexibility_desc": "Fonctionne bien avec d'autres codes et l'API est conçue pour la flexibilité et les fonctionnalités personnalisées. Si vous pouvez le penser, vous pouvez le construire avec DataFormsJS.",
    "better_title": "De meilleurs sites",
    "better_desc": "DataFormsJS est conçu pour être une grande expérience pour les développeurs et les utilisateurs finaux, vous permettant de créer de meilleurs sites.",
    "view_sample": "Voir l'échantillon complet",
    "hello_world_example": "Exemple de Bonjour le Monde",
    "hello_world_hbs_desc": "Le cadre DataFormsJS est idéalement adapté aux applications monopage (SPA). Les éléments <template> et <script> avec [data-route] sont utilisés pour définir différents itinéraires (pages Web) et des variables peuvent être transmises de l'URL au modèle de la page. Cet exemple utilise des guidons pour le rendu des modèles.",
    "hello_world_js_desc": "L'utilisation d'un modèle ou d'un moteur de vue tel que les guidons ou Vue n'est pas requise. Dans cet exemple, un plugin [dataBind.js] est utilisé avec l'attribut [data-bind] pour afficher la variable à partir de l'URL.",
    "hello_world_web_desc": "DataFormsJS comprend des Composants Web qui peuvent être utilisés sur les navigateurs modernes et fournit un avertissement convivial pour les utilisateurs de navigateurs plus anciens. Les composants Web sont souvent décrits comme l'avenir du développement Web, car ils sont bien définis et fournissent des fonctionnalités similaires aux cadres JavaScript tout en utilisant moins de code.",
    "hello_world_react_desc": "DataFormsJS fournit un compilateur Web [jsxLoader.js] qui peut être utilisé comme alternative à Babel. Il permet à JSX d'être utilisé à l'intérieur des pages Web sans avoir besoin d'un processus de construction. Le compilateur est petit à télécharger et extrêmement rapide à exécuter.",
    "json_data_example": "Afficher les données JSON d'un service Web",
    "json_data_hbs_desc": "Avec DataFormsJS, vous pouvez afficher les données des services Web en utilisant uniquement le balisage (HTML et modèles). Différents objets de page spécifiés dans [data-page] peuvent être développés pour gérer la logique du contrôleur et l'état du modèle. L'objet de page intégré [jsonData] permet de contrôler le contenu HTML à restituer en fonction de l'état de la demande [isLoading, isLoaded, hasError]. Dans cet exemple, les attributs [sélecteur de filtre de données] et [tri des données] sont utilisés par les plugins pour permettre l'interaction de l'utilisateur avec la table de données. Les modèles de page sont téléchargés et mis en cache en fonction de l'attribut [src] des itinéraires correspondants.",
    "json_data_vue_desc": "DataFormsJS prend en charge Vue en tant que moteur de rendu qui permet aux applications d'afficher des données à l'aide de Vue sans avoir à écrire JavaScript. Chaque route se voit attribuer son propre modèle d'instance Vue et lors de l'utilisation de l'objet de page intégré [jsonData] peut utiliser [isLoading, isLoaded, hasError] pour contrôler ce qui est affiché. Dans cet exemple, [data-countries] et [data-regions] sont définis sur les routes, ce qui les définit également comme propriétés d'instance [countries] et [regions] avec les observateurs Vue; les deux propriétés représentent les données du service Web téléchargé. DataFormsJS fonctionne avec Vue 2 et Vue 3.",
    "json_data_react_desc": "DataFormsJS fournit également un ensemble de composants React (JSX et JS) qui peuvent être utilisés pour fournir des fonctionnalités similaires au cadre standard. Les composants React sont de petite taille et incluent des fonctionnalités telles que l'affichage des données de service Web, la gestion des erreurs, le tri des tableaux, les contrôles de filtre, l'internationalisation (i18n) / traductions, le formatage des données, etc.",
    "json_data_graphql_desc": "DataFormsJS fournit un support intégré pour GraphQL. Cet exemple utilise des poignées pour afficher les données d'un service GraphQL. GraphQL peut être affecté à des itinéraires globaux et des éléments individuels sur la page et les requêtes peuvent être intégrées directement dans la page ou téléchargées dynamiquement lors de la première utilisation.",
    "json_data_web_desc": "Semblable à React Components DataFormsJS fournit également un ensemble de composants Web qui peuvent être utilisés pour fournir des fonctionnalités similaires à l'infrastructure standard. Les composants Web sont de petite taille et fournissent un bon point de départ pour une application ou un site qui utilise des composants Web. Pour SPA, le composant <url-route> télécharge et met en cache les modèles lorsqu'il est utilisé en fonction de l'attribut [src]. Le composant <json-data> transmet les données du service Web aux éléments enfants à l'aide de [data-bind] et d'autres options.",
    "create_site": "Créez un site instantané sur le terrain de jeu!"
}